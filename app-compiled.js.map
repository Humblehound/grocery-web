{"version":3,"sources":["app.js"],"names":[],"mappings":";;AAAA,IAAM,OAAe,QAAQ,MAAR,CAArB;AAAA,IACM,KAAe,QAAQ,IAAR,CADrB;AAAA,IAEM,OAAe,QAAQ,MAAR,CAFrB;AAAA,IAGM,eAAe,QAAQ,uBAAR,CAHrB;AAAA,IAIM,UAAe,QAAQ,kBAAR,CAJrB;AAAA,IAKM,MAAe,QAAQ,GAL7B;;AAOA,IAAI,SAAS,KAAK,YAAL,CAAkB,UAAU,GAAV,EAAe,GAAf,EAAoB;AACjD,MAAI,MAAM,IAAI,GAAd;AACA,MAAI,OAAO,GAAX,EAAgB;AACd,WAAO,YAAP;AACD;;AAED;AACA;;AAEA,MAAI,OAAO,SAAX,EAAsB;AACpB,QAAI,SAAJ,CAAc,GAAd;AACA,QAAI,GAAJ;AACD,GAHD,MAGO,IAAI,OAAO,WAAP,IAAsB,OAAO,YAAjC,EAA+C;AACpD,QAAI,SAAJ,CAAc,cAAd,EAA8B,kBAA9B;AACA,QAAI,SAAJ,CAAc,eAAd,EAA+B,oBAA/B;AACA,QAAI,GAAJ,CAAQ,KAAK,SAAL,CAAe,QAAQ,IAAI,KAAJ,CAAU,CAAV,CAAR,GAAf,CAAR;AACD,GAJM,MAIA;AACL,OAAG,QAAH,CAAY,aAAa,GAAzB,EAA8B,UAAU,GAAV,EAAe,IAAf,EAAqB;AACjD,UAAI,GAAJ,EAAS;AACP,YAAI,SAAJ,CAAc,GAAd;AACA,YAAI,GAAJ,CAAQ,WAAR;AACD,OAHD,MAGO;AACL,YAAI,MAAM,KAAK,OAAL,CAAa,GAAb,EAAkB,KAAlB,CAAwB,CAAxB,CAAV;AACA,YAAI,SAAJ,CAAc,cAAd,EAA8B,aAAa,GAAb,CAA9B;AACA,YAAI,QAAQ,MAAZ,EAAoB;AAClB,cAAI,SAAJ,CAAc,eAAd,EAA+B,oBAA/B;AACD;AACD,YAAI,GAAJ,CAAQ,IAAR;AACD;AACF,KAZD;AAaD;AACF,CA/BY,CAAb;;AAiCA,OAAO,MAAP,CAAc,IAAI,SAAJ,IAAiB,IAA/B,EAAqC,IAAI,OAAJ,IAAe,WAApD,EAAiE,YAAY;AAC3E,UAAQ,GAAR,yBAAkC,QAAQ,GAA1C;AACD,CAFD","file":"app-compiled.js","sourcesContent":["const http         = require('http'),\n      fs           = require('fs'),\n      path         = require('path'),\n      contentTypes = require('./utils/content-types'),\n      sysInfo      = require('./utils/sys-info'),\n      env          = process.env;\n\nlet server = http.createServer(function (req, res) {\n  let url = req.url;\n  if (url == '/') {\n    url += 'index.html';\n  }\n\n  // IMPORTANT: Your application HAS to respond to GET /health with status 200\n  //            for OpenShift health monitoring\n\n  if (url == '/health') {\n    res.writeHead(200);\n    res.end();\n  } else if (url == '/info/gen' || url == '/info/poll') {\n    res.setHeader('Content-Type', 'application/json');\n    res.setHeader('Cache-Control', 'no-cache, no-store');\n    res.end(JSON.stringify(sysInfo[url.slice(6)]()));\n  } else {\n    fs.readFile('./static' + url, function (err, data) {\n      if (err) {\n        res.writeHead(404);\n        res.end('Not found');\n      } else {\n        let ext = path.extname(url).slice(1);\n        res.setHeader('Content-Type', contentTypes[ext]);\n        if (ext === 'html') {\n          res.setHeader('Cache-Control', 'no-cache, no-store');\n        }\n        res.end(data);\n      }\n    });\n  }\n});\n\nserver.listen(env.NODE_PORT || 3000, env.NODE_IP || 'localhost', function () {\n  console.log(`Application worker ${process.pid} started...`);\n});\n"]}